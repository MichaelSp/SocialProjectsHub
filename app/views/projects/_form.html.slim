.ui.segment
  = form_for(@project, html: {class: 'ui large form'}) do |f|
    = f.validation_errors
    -if User.current && (User.current.translator? || User.current.admin?)
      = render 'translation_form', {f: f}
    -else
      = f.text_field :name
      = f.text_area :description
    - if (User.current && User.current.admin?) || (User.current.nil? && !@project.persisted?)
      = f.text_field :homepage, labeled: 'http://'
      = f.text_field :facebook, labeled: "<i class=\"facebook icon\"></i>".html_safe
      = f.text_field :twitter, labeled: "<i class=\"twitter icon\"></i>".html_safe
      = f.collection_select :category_ids, Category.all, :id, :name, {label: 'Categories', multi: true}
      .ui.right.floated.field
        label Rating
        .ui.huge.star.rating#project_rating_stars data-max-rating="5" data-rating=(f.object.rating || 0).to_s
        = f.hidden_field :rating

      .ui.horizontal.section.divider Ordering
      .fields
        = f.fields_for :positions, nil, html: {class: "four wide fields"} do |p|
          = p.hidden_field :target_group
          = p.number_field :pos, label: "#{p.object.target_group.humanize} Position", min: 0
      .ui.horizontal.section.divider Images
      = f.fields_for :images, nil, html: {class: "ui inline fields"} do |image|
        = attachment_image_tag(image.object, :file, :fill, 50, 50)
        = image.radio_button :category, :background
        = image.radio_button :category, :image
        = image.radio_button :category, :delete
      = f.attachment_field :images_files, multiple: true

    .ui.section.divider
    .actions
      = f.submit class: "ui primary button"
